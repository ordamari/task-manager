{"version":3,"sources":["assets/img/taskmanager.png","services/customHooks.js","services/imgService.js","cmps/ImgSearch.jsx","services/eventBusService.js","cmps/Navbar.jsx","services/initialDataService.js","cmps/AddTask.jsx","cmps/EditData.jsx","cmps/AddTD.jsx","services/cloudinaryService.js","cmps/Task.jsx","cmps/Columns.jsx","services/utilService.js","cmps/AddColumn.jsx","cmps/Specialities.jsx","pages/Home.jsx","App.js","serviceWorker.js","reducers/taskReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","useForm","initialState","cb","useState","fields","setFields","useEffect","event","value","target","type","name","contact","title","keyword","imgService","getNewImage","a","async","prmRes","axios","get","then","res","data","ImgSearch","setImgs","search","handleChange","className","length","onClick","onSubmit","ev","preventDefault","console","log","results","handleSubmit","autoComplete","placeholder","onChange","on","eventName","listener","callListener","detail","window","addEventListener","removeEventListener","emit","dispatchEvent","CustomEvent","Navbar","imgs","src","logo","alt","map","img","idx","full","urls","thumb","eventBus","key","initialData","tasks","t101","id","info","media","show","tdList","isFinish","t102","t103","t104","t105","colums","c101","taskIds","c102","c103","columnOrder","lockTask","dataService","query","updateData","getLocks","updateLocks","locks","AddTask","addTask","columnId","task","EditData","editData","taskId","toggleDataEdit","AddTD","addTD","td","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","method","body","json","Task","index","removeTask","lockTasks","createTD","toggleIsLock","toggleIsShown","toggleIsFinish","removeTD","isDragDisabled","some","isMenuOpen","setIsMenuOpen","editIsOpen","setEditIsOpen","toggleIsOpen","fn","vars","newImg","secure_url","draggableId","provided","snapshot","draggableProps","ref","innerRef","isDragging","dragHandleProps","split","width","height","contacts","defaultChecked","htmlFor","hidden","Columns","column","removeColumn","droppableId","droppableProps","isDraggingOver","randomId","Math","random","toString","substr","AddColumn","addColumn","Specialities","props","setData","setLockTasks","backgroundImg","setBackgroundImg","orderIndex","newColumnOrder","splice","newColums","newTasks","forEach","newData","newTaskIds","filter","newTask","findIndex","LocktaskId","newLockTasks","push","tdIdx","style","backgroundImage","onDragEnd","result","document","color","backgroundColor","destination","source","start","finish","startTaskIds","Array","from","newStart","finishTaskIds","newFinish","newColumn","onDragStart","onDragUpdate","update","opacity","Object","keys","transition","direction","Home","App","component","path","Boolean","location","hostname","match","rootReducer","combineReducers","state","action","_id","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f737235.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/taskmanager.70740aa3.png\";","import { useEffect, useState } from \"react\";\r\n\r\nexport function useForm(initialState, cb = function () { }) {\r\n    const [fields, setFields] = useState(initialState);\r\n\r\n    useEffect(() => { cb(fields) }, [fields])\r\n\r\n    return [\r\n        fields,\r\n        function (event) {\r\n            if (!event) setFields({\r\n                contact: '',\r\n                title:'',\r\n                keyword:''\r\n            });\r\n            else {\r\n\r\n                const value = event.target.type === 'number' ? +event.target.value : event.target.value\r\n                setFields({\r\n                    ...fields,\r\n                    [event.target.name]: value\r\n                });\r\n            }\r\n        },\r\n\r\n    ];\r\n}","import axios from 'axios'\r\n\r\n\r\nexport const imgService = {\r\n  getNewImage,\r\n}\r\n\r\nexport async function getNewImage(keyword) {\r\n  \r\n  var prmRes = axios.get(`https://api.unsplash.com/search/photos/?client_id=PA3Oow8kvS9lXoH0KnT7yxn2e_FAaKFzROSIXsAdPNE&query=${keyword}`)\r\n  return prmRes.then(res => {\r\n    return res.data\r\n  })\r\n}","import React from 'react'\r\nimport { useForm } from '../services/customHooks';\r\nimport { imgService } from '../services/imgService';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nexport function ImgSearch({ setImgs }) {\r\n\r\n    const [search, handleChange] = useForm({ keyword: '' });\r\n\r\n    const handleSubmit = async (ev) => {\r\n        ev.preventDefault();\r\n        const data = await imgService.getNewImage(search.keyword);\r\n        console.log(\"handleSubmit -> data\", data)\r\n        setImgs(data.results)\r\n\r\n    }\r\n\r\n    const cleanImgs = () => {\r\n        handleChange();\r\n        setImgs([])\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='imgs-input'>\r\n            <div className=\"in-input flex\">\r\n                {search.keyword.length > 0 &&\r\n                    <div className='flex align-center delete-container'>\r\n                        <button onClick={() => cleanImgs()}><CloseIcon /></button>\r\n                        \r\n\r\n                    </div>\r\n                }\r\n                <SearchIcon />\r\n            </div>\r\n            <form className='flex align-center' onSubmit={(ev) => { handleSubmit(ev) }}>\r\n                <input name=\"keyword\" autoComplete=\"off\" placeholder='Background Image' value={search.keyword} onChange={handleChange} type=\"text\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","function on(eventName, listener) {\r\n    const callListener = ({ detail }) => {\r\n        listener(detail)\r\n    }\r\n    window.addEventListener(eventName, callListener)\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener)\r\n    }\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\n\r\nexport default { on, emit }","import React, { useState } from 'react'\r\nimport logo from '../assets/img/taskmanager.png'\r\nimport { ImgSearch } from './ImgSearch'\r\nimport eventBus from '../services/eventBusService'\r\n\r\n\r\n\r\nexport function Navbar() {\r\n\r\n    const [imgs, setImgs] = useState([]);\r\n\r\n    const setbackgroundImg=(full,thumb)=>{\r\n        eventBus.emit('setBackground', {full,thumb})\r\n        setImgs([]);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='navbar-container'>\r\n\r\n\r\n            <nav className='flex space-between align-center'>\r\n                <div className=\"flex align-center\">\r\n                <img src={logo} alt=\"\" />\r\n                <h1>Task Manager</h1>\r\n                </div>\r\n              \r\n                <ImgSearch setImgs={setImgs} />\r\n\r\n            </nav>\r\n            {imgs.length > 0 &&\r\n\r\n                <div className='imgs-container'>\r\n                    {imgs.map((img, idx) => (<img onClick={()=>setbackgroundImg(img.urls.full,img.urls.thumb)} key={idx} src={img.urls.thumb} />))}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\r\nvar initialData = {\r\n    tasks: {\r\n        t101: { id: 't101', contact: 'buy food', info:{media:'',show:true , tdList:[{title:'chips', isFinish:false},{title:'bamba', isFinish:true},{title:'apropo', isFinish:true}]} },\r\n        t102: { id: 't102', contact: 'buy drink', info:{media:'',show:true,tdList:[{title:'kola', isFinish:false},{title:'spring', isFinish:true},{title:'orange juice', isFinish:true}]} },\r\n        t103: { id: 't103', contact: 'choose song', info:{media:'https://www.youtube.com/watch?v=t4-Z8vVMRBs',show:true}},\r\n        t104: { id: 't104', contact: 'invite friends', info:{media:'',show:true,tdList:[{title:'guy', isFinish:false},{title:'sapir', isFinish:true},{title:'oshri', isFinish:true}]} },\r\n        t105: { id: 't105', contact: 'party', info:{media:'https://amp.thenationalnews.com/image/policy:1.1042483:1593608070/tr30-June-Ibiza.jpg?f=16x9&w=1200&$p$f$w=ae152f2',show:true} },\r\n    },\r\n    colums: {\r\n        c101: {\r\n            id: 'c101',\r\n            title: 'Todo',\r\n            taskIds: [ 't102', 't104']\r\n        },\r\n        c102: {\r\n            id: 'c102',\r\n            title: 'Doing',\r\n            taskIds: ['t105', 't103']\r\n        },\r\n        c103: {\r\n            id: 'c103',\r\n            title: 'Done',\r\n            taskIds: ['t101']\r\n        },\r\n    },\r\n    columnOrder: ['c101', 'c102', 'c103']\r\n}\r\n\r\nvar lockTask = ['t101','t102'];\r\n\r\n\r\nfunction query() {\r\n    return { ...initialData };\r\n}\r\n\r\nfunction updateData(data) {\r\n    initialData = data\r\n}\r\n\r\n\r\nfunction getLocks() {\r\n    return [...lockTask]\r\n}\r\n\r\nfunction updateLocks(locks) {\r\n    lockTask=locks;\r\n}\r\n\r\nvar dataService = {\r\n    query,\r\n    updateData,\r\n    getLocks,\r\n    updateLocks\r\n}\r\n\r\nexport default dataService \r\n","import React from 'react'\r\nimport { useForm } from '../services/customHooks';\r\n\r\nexport function AddTask({addTask,columnId}) {\r\n\r\n    const [task, handleChange] = useForm({ contact: '' });\r\n\r\n    const handleSubmit=(ev)=>{\r\n        ev.preventDefault();\r\n        addTask(task.contact,columnId)\r\n        handleChange()\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={(ev)=>{handleSubmit(ev)}}>\r\n            <input name=\"contact\" autoComplete=\"off\" placeholder='Add task' value={task.contact} onChange={handleChange} type=\"text\" />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../services/customHooks';\r\n\r\nexport function EditData({editData,taskId,toggleDataEdit}) {\r\n\r\n    const [data, handleChange] = useForm({ media: '' });\r\n\r\n    const handleSubmit=(ev)=>{\r\n        editData(taskId,data.media)\r\n        ev.preventDefault();\r\n        toggleDataEdit();\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={(ev)=>{handleSubmit(ev)}}>\r\n            <input name=\"media\" autoComplete=\"off\" placeholder='img or youtube link' value={data.media} onChange={handleChange} type=\"text\" />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../services/customHooks';\r\n\r\nexport function AddTD({addTD,taskId}) {\r\n\r\n    const [td, handleChange] = useForm({ title: '' });\r\n\r\n    const handleSubmit=(ev)=>{\r\n        ev.preventDefault();\r\n        addTD(taskId,td.title)\r\n        handleChange()\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={(ev)=>{handleSubmit(ev)}}>\r\n            <input name=\"title\" autoComplete=\"off\" placeholder='Add To Do' value={td.title} onChange={handleChange} type=\"text\" />\r\n        </form>\r\n    )\r\n}\r\n","export const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(ev) {\r\n    const CLOUD_NAME = \"dif8yy3on\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', ev.target.files[0])\r\n    formData.append('upload_preset', 'misterToy');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    \r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { EditData } from './EditData';\r\nimport { AddTD } from './AddTD';\r\nimport eventBus from '../services/eventBusService'\r\nimport { cloudinaryService } from '../services/cloudinaryService'\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function Task({ task, index, removeTask, columnId, lockTasks, createTD, toggleIsLock, toggleIsShown, editData, addTD, toggleIsFinish, removeTD }) {\r\n\r\n    const isDragDisabled = lockTasks.some(taskId => taskId === task.id);\r\n\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n    const [editIsOpen, setEditIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let unsubscribe1 = null;\r\n        let unsubscribe2 = null;\r\n        unsubscribe1 = eventBus.on('toggle-is-open', (taskId) => {\r\n            if (taskId !== task.id) setIsMenuOpen(false)\r\n        })\r\n        unsubscribe2 = eventBus.on('close-menu', (taskId) => {\r\n            if (taskId === task.id) setIsMenuOpen(false)\r\n        })\r\n\r\n        return () => {\r\n            unsubscribe1 = null\r\n            unsubscribe2 = null;\r\n        }\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const toggleDataEdit = () => {\r\n        setEditIsOpen(!editIsOpen);\r\n    }\r\n\r\n    const toggleIsOpen = (fn = () => { }, vars = []) => {\r\n        eventBus.emit('toggle-is-open', task.id)\r\n        setEditIsOpen(false)\r\n        fn(...vars);\r\n        setIsMenuOpen(!isMenuOpen)\r\n    }\r\n\r\n    const uploadImg=async (ev) => {\r\n        const { name } = ev.target\r\n        try {\r\n            const newImg = await cloudinaryService.uploadImg(ev);\r\n            const img = newImg.secure_url;\r\n            editData(task.id,img)\r\n            setEditIsOpen(false);\r\n        } catch (err) {\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Draggable draggableId={task.id} index={index} isDragDisabled={isDragDisabled}>\r\n            {(provided, snapshot) => (\r\n                <li\r\n                    {...provided.draggableProps}\r\n                    ref={provided.innerRef}\r\n                    className={`${snapshot.isDragging ? 'dragging' : ''} ${isDragDisabled ? 'no-drag' : ''} flex space-between align-center task`}\r\n                // isDragging={snapshot.isDragging}\r\n                >\r\n\r\n                    <div className='flex column'>\r\n                        <div className='flex space-between title'>\r\n\r\n                            <div className='flex align-center '>\r\n                                <div className='handle' {...provided.dragHandleProps}></div>\r\n                                <p>{task.contact}</p>\r\n                            </div>\r\n                            <div className='flex align-center'>\r\n                                {task.info.media && task.info.media.split('.')[1] !== 'youtube' &&\r\n                                    <ImageIcon />\r\n                                }\r\n                                {task.info.media && task.info.media.split('.')[1] === 'youtube' &&\r\n                                    <YouTubeIcon />\r\n                                }\r\n                                {task.info.tdList &&\r\n                                    <ListIcon />\r\n                                }\r\n                                <button className='menu-btn' onClick={() => toggleIsOpen()}><MoreHorizIcon /></button>\r\n                            </div>\r\n                        </div>\r\n                        {(task.info.media && task.info.show && task.info.media.split('.')[1] !== 'youtube') &&\r\n                            <img src={task.info.media} alt=\"\" />}\r\n                        {(task.info.media && task.info.show && task.info.media.split('.')[1] === 'youtube') &&\r\n                            <iframe width=\"180\" height=\"150\" title={task.contacts} src={`https://www.youtube.com/embed/${task.info.media.split('watch?v=')[1]}`}></iframe>}\r\n\r\n                        {(task.info.tdList && task.info.show) &&\r\n                            <div className='list-container'>\r\n                                <ul className='list'>\r\n                                    {task.info.tdList.map((td, idx) => (\r\n                                        <li className='flex space-between' key={idx} >\r\n                                            <div className={`flex align-center ${td.isFinish ? 'done' : ''}`}>\r\n                                                <input onClick={() => toggleIsFinish(task.id, idx)} type=\"checkbox\" defaultChecked={td.isFinish} />\r\n                                                {td.title}\r\n                                            </div>\r\n                                            <button onClick={() => removeTD(task.id, idx)}><CloseIcon /></button>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                <AddTD addTD={addTD} taskId={task.id} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    {editIsOpen && <div className='edit-container'>\r\n                        <div className='flex flex-end'>\r\n\r\n                            <button onClick={toggleDataEdit}><CloseIcon /></button>\r\n                        </div>\r\n                        <EditData editData={editData} taskId={task.id} toggleDataEdit={toggleDataEdit} />\r\n                        <label className=\"upload-btn flex align-center\" htmlFor=\"upload-file\"><AttachmentIcon/> Upload Img </label>\r\n                        <input hidden type=\"file\" className=\"file-input\" name=\"img\" id=\"upload-file\"\r\n                            onChange={uploadImg} />\r\n                    </div>}\r\n\r\n\r\n\r\n                    {isMenuOpen && <div className='menu'>\r\n                        <button onClick={() => { toggleIsOpen() }}><CloseIcon/> close</button>\r\n                        {!isDragDisabled && <button onClick={() => { toggleIsOpen(removeTask, [task.id, columnId]) }}><DeleteOutlineOutlinedIcon /> Remove</button>}\r\n                        <button onClick={() => { toggleIsOpen(toggleIsLock, [task.id]) }}>{isDragDisabled ? <LockOpenOutlinedIcon /> : <LockOutlinedIcon />} {isDragDisabled ? 'Unlock' : 'Lock'}</button>\r\n                        <button onClick={() => { toggleIsOpen(toggleIsShown, [task.id]) }}><InfoIcon /> {task.info.show ? 'Unshow' : 'Show'}</button>\r\n                        <button onClick={() => { toggleIsOpen(toggleDataEdit) }}><ImageIcon /> Media</button>\r\n                        <button onClick={() => { toggleIsOpen(createTD, [task.id]) }}><ListIcon /> List</button>\r\n                    </div>}\r\n\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    )\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { AddTask } from './AddTask';\r\nimport { Task } from './Task'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\nexport function Columns({ column, tasks, index,addTask,createTD,removeColumn,removeTask,lockTasks,toggleIsLock,toggleIsShown,editData,addTD,toggleIsFinish,removeTD }) {\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <Draggable\r\n            draggableId={column.id}\r\n            index={index}\r\n        >\r\n            {(provided) => (\r\n                <li\r\n                 className='columns'\r\n                 {...provided.draggableProps}\r\n                 ref={provided.innerRef}\r\n                 >\r\n                     <div className='flex flex-end'>\r\n                     <button onClick={()=>{removeColumn(column.id,index)}}><CloseIcon/></button>\r\n                     </div>\r\n                    <h2 {...provided.dragHandleProps}>{column.title}</h2>\r\n                    <Droppable droppableId={column.id} type=\"task\">\r\n                        {(provided, snapshot) => (\r\n                            <ul\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                className={`flex column ${snapshot.isDraggingOver ? 'dragging' : ''}`}\r\n                            >\r\n                                {tasks.map((task, index) => <Task editData={editData} toggleIsFinish={toggleIsFinish} addTD={addTD} key={task.id}\r\n                                 toggleIsShown={toggleIsShown} task={task} index={index} removeTask={removeTask} columnId={column.id}\r\n                                  lockTasks={lockTasks} toggleIsLock={toggleIsLock} removeTD={removeTD} createTD={createTD} />)}\r\n                               <div className='place-holder'>\r\n\r\n                                {provided.placeholder}\r\n                               </div>\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                   <AddTask addTask={addTask} columnId={column.id}  />\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    )\r\n\r\n}","\r\nexport function randomId() {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n}","import React from 'react'\r\nimport { useForm } from '../services/customHooks';\r\n\r\nexport function AddColumn({addColumn}) {\r\n\r\n    const [column, handleChange] = useForm({ title: '' });\r\n\r\n    const handleSubmit=(ev)=>{\r\n        ev.preventDefault();\r\n        addColumn(column.title);\r\n        handleChange()\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={(ev)=>{handleSubmit(ev)}}>\r\n            <input name=\"title\" autoComplete=\"off\" placeholder='Add card' value={column.title} onChange={handleChange} type=\"text\" />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport dataService from '../services/initialDataService'\r\nimport { Columns } from './Columns';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { randomId } from '../services/utilService';\r\nimport { AddColumn } from './AddColumn';\r\nimport eventBus from '../services/eventBusService'\r\n\r\n\r\nexport function Specialities(props) {\r\n\r\n\r\n    const [data, setData] = useState(dataService.query());\r\n    const [lockTasks, setLockTasks] = useState(dataService.getLocks());\r\n    const [backgroundImg,setBackgroundImg]=useState('https://images.unsplash.com/photo-1533174072545-7a4b6ad7a6c3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80')\r\n\r\n\r\n    useEffect(() => {\r\n        dataService.updateData(data);\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        dataService.updateLocks(lockTasks);\r\n    }, [lockTasks])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe1 = null;\r\n        unsubscribe1 = eventBus.on('setBackground', ({full,thumb}) => {\r\n            setBackgroundImg(thumb);\r\n            setBackgroundImg(full);\r\n        })\r\n       \r\n\r\n        return () => {\r\n            unsubscribe1 = null\r\n        }\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    const onDragEnd = result => {\r\n        document.body.style.color = 'inherit'\r\n        document.body.style.backgroundColor = 'inherit'\r\n        const { destination, source, draggableId, type } = result;\r\n        if (!destination) return;\r\n        if (\r\n            destination.droppableId === source.droppableId &&\r\n            destination.index === source.index\r\n        ) return;\r\n\r\n        if (type === 'column') {\r\n            const newColumnOrder = Array.from(data.columnOrder);\r\n            newColumnOrder.splice(source.index, 1);\r\n            newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n            const newData = {\r\n                ...data,\r\n                columnOrder: newColumnOrder\r\n            }\r\n\r\n            setData(newData);\r\n            return;\r\n        }\r\n\r\n        const start = data.colums[source.droppableId];\r\n        const finish = data.colums[destination.droppableId];\r\n\r\n        if (start === finish) {\r\n            const newTaskIds = Array.from(start.taskIds);\r\n            newTaskIds.splice(source.index, 1);\r\n            newTaskIds.splice(destination.index, 0, draggableId);\r\n            const newColumn = {\r\n                ...start,\r\n                taskIds: newTaskIds\r\n            }\r\n\r\n            const newData = {\r\n                ...data,\r\n                colums: {\r\n                    ...data.colums,\r\n                    [newColumn.id]: newColumn\r\n                }\r\n            }\r\n\r\n            setData(newData);\r\n            return;\r\n        }\r\n\r\n        const startTaskIds = Array.from(start.taskIds);\r\n        startTaskIds.splice(source.index, 1);\r\n        const newStart = {\r\n            ...start,\r\n            taskIds: startTaskIds\r\n        };\r\n\r\n        const finishTaskIds = Array.from(finish.taskIds);\r\n        finishTaskIds.splice(destination.index, 0, draggableId);\r\n        const newFinish = {\r\n            ...finish,\r\n            taskIds: finishTaskIds\r\n        };\r\n\r\n        const newData = {\r\n            ...data,\r\n            colums: {\r\n                ...data.colums,\r\n                [newStart.id]: newStart,\r\n                [newFinish.id]: newFinish,\r\n            }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const removeColumn = (columnId, orderIndex) => {\r\n        const taskIds = [...data.colums[columnId].taskIds];\r\n\r\n        const newColumnOrder = [...data.columnOrder]\r\n        newColumnOrder.splice(orderIndex, 1);\r\n\r\n        const newColums = { ...data.colums }\r\n        delete newColums[columnId];\r\n\r\n        const newTasks = { ...data.tasks };\r\n        taskIds.forEach(id => delete newTasks[id])\r\n\r\n        const newData = {\r\n            tasks: newTasks,\r\n            colums: newColums,\r\n            columnOrder: newColumnOrder\r\n        }\r\n\r\n        console.log(newData);\r\n\r\n        setData(newData);\r\n    }\r\n\r\n    const removeTask = (taskId, columnId) => {\r\n        const newTaskIds = data.colums[columnId].taskIds.filter(id => id !== taskId);\r\n        const newColums = {\r\n            ...data.colums,\r\n            [columnId]: {\r\n                ...data.colums[columnId],\r\n                taskIds: newTaskIds\r\n            }\r\n        }\r\n        const newTasks = { ...data.tasks }\r\n        delete newTasks[taskId];\r\n        const newData = {\r\n            ...data,\r\n            tasks: newTasks,\r\n            colums: newColums\r\n        }\r\n\r\n        setData(newData);\r\n\r\n    }\r\n\r\n    const addTask = (contact, columnId) => {\r\n        const id = randomId();\r\n        const newTask = { id, contact, info: { media: '', show: true } }\r\n        const newData = {\r\n            tasks: {\r\n                ...data.tasks,\r\n                [id]: newTask\r\n            },\r\n            colums: {\r\n                ...data.colums,\r\n                [columnId]: {\r\n                    ...data.colums[columnId],\r\n                    taskIds: [...data.colums[columnId].taskIds, id]\r\n                }\r\n            },\r\n            columnOrder: [\r\n                ...data.columnOrder\r\n            ]\r\n\r\n        }\r\n\r\n        setData(newData);\r\n    }\r\n\r\n    const addColumn = (title) => {\r\n        const id = randomId();\r\n        const newColumn = { id, title, taskIds: [] }\r\n        const newData = {\r\n            tasks: { ...data.tasks },\r\n            colums: { ...data.colums, [id]: newColumn },\r\n            columnOrder: [...data.columnOrder, id]\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const onDragStart = (ev) => {\r\n        console.log(ev);\r\n        eventBus.emit('close-menu', ev.draggableId)\r\n        document.body.style.color = 'grey'\r\n    }\r\n\r\n    const onDragUpdate = update => {\r\n        const { destination } = update;\r\n        const opacity = destination ? destination.index / Object.keys(data.tasks).length : 0;\r\n        document.body.style.backgroundColor = `rgba(180, 214, 211,${opacity})`\r\n        document.body.style.transition = 'background-color .3s ease'\r\n    }\r\n\r\n    const toggleIsLock = (taskId) => {\r\n        const idx = lockTasks.findIndex(LocktaskId => LocktaskId === taskId);\r\n        if (idx === -1) setLockTasks([...lockTasks, taskId])\r\n        else {\r\n            const newLockTasks = [...lockTasks];\r\n            newLockTasks.splice(idx, 1);\r\n            setLockTasks(newLockTasks);\r\n        }\r\n    }\r\n\r\n    const toggleIsShown = (taskId) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        newTask.info.show = !newTask.info.show;\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const editData = (taskId, media) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        newTask.info.media = media;\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const addTD = (taskId, title) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        newTask.info.tdList.push({ isFinish: false, title })\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const toggleIsFinish = (taskId, idx) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        newTask.info.tdList[idx].isFinish = !newTask.info.tdList[idx].isFinish\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const removeTD = (taskId, tdIdx) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        newTask.info.tdList.splice(tdIdx, 1);\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const createTD = (taskId) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        if (newTask.info.tdList) return;\r\n        newTask.info.tdList = [];\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{backgroundImage:`url(${backgroundImg})`}} className='main-div'>\r\n\r\n            <DragDropContext\r\n                onDragEnd={onDragEnd}\r\n                onDragStart={onDragStart}\r\n                onDragUpdate={onDragUpdate}\r\n            >\r\n                <section className='flex align-start specialities'>\r\n                    <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\r\n                        {provided => (\r\n\r\n                            <ul\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                                className='flex align-start'\r\n                            >\r\n                                {\r\n                                    data.columnOrder.map((columnId, index) => {\r\n                                        const column = data.colums[columnId];\r\n                                        const tasks = column.taskIds.map(taskId => data.tasks[taskId]);\r\n                                        return <Columns key={column.id} addTD={addTD} editData={editData} column={column}\r\n                                            tasks={tasks} index={index} toggleIsShown={toggleIsShown} toggleIsFinish={toggleIsFinish}\r\n                                            addTask={addTask} removeColumn={removeColumn} removeTask={removeTask} lockTasks={lockTasks}\r\n                                            toggleIsLock={toggleIsLock} removeTD={removeTD} createTD={createTD} />\r\n                                    })\r\n                                }\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                    <div className='add-column-container'>\r\n                        <AddColumn addColumn={addColumn} />\r\n                    </div>\r\n                </section>\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport { Specialities } from '../cmps/Specialities';\r\n\r\n\r\n\r\nexport function Home(props) {\r\n    return (\r\n        <section>\r\n            <Specialities />\r\n        </section>\r\n    )\r\n\r\n}","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Navbar } from './cmps/Navbar';\n\nimport { Home } from './pages/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Router>\n        <Switch>\n          <Route component={Home} path='/' />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  tasks: [],\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_TASKS':\r\n      return { ...state, tasks: action.tasks };\r\n    case 'TASK_ADD':\r\n      return { ...state, tasks: [...state.tasks, action.task] };\r\n    case 'TASK_UPDATE':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(task =>\r\n          task._id === action.task._id ? action.task : task\r\n        )\r\n      };\r\n    case 'TASK_REMOVE':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task => task._id !== action.taskId)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport taskReducer from './taskReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  task: taskReducer,\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/styles/global.scss'\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}