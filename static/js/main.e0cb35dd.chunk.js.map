{"version":3,"sources":["services/initialDataService.js","services/customHooks.js","cmps/AddTask.jsx","cmps/EditData.jsx","cmps/AddTD.jsx","services/eventBusService.js","services/cloudinaryService.js","cmps/Task.jsx","cmps/Columns.jsx","services/utilService.js","cmps/AddColumn.jsx","cmps/Specialities.jsx","pages/Home.jsx","App.js","serviceWorker.js","reducers/taskReducer.js","reducers/index.js","store.js","index.js"],"names":["initialData","tasks","t101","id","contact","info","media","show","tdList","title","isFinish","t102","t103","t104","t105","colums","c101","taskIds","c102","c103","columnOrder","lockTask","dataService","query","updateData","data","getLocks","updateLocks","locks","useForm","initialState","cb","useState","fields","setFields","useEffect","event","value","target","type","name","AddTask","addTask","columnId","task","handleChange","onSubmit","ev","preventDefault","handleSubmit","autoComplete","placeholder","onChange","EditData","editData","taskId","toggleDataEdit","AddTD","addTD","td","on","eventName","listener","callListener","detail","window","addEventListener","removeEventListener","emit","dispatchEvent","CustomEvent","cloudinaryService","uploadImg","a","async","UPLOAD_URL","formData","FormData","append","files","fetch","method","body","res","json","console","log","Task","index","removeTask","lockTasks","createTD","toggleIsLock","toggleIsShown","toggleIsFinish","removeTD","isDragDisabled","some","isMenuOpen","setIsMenuOpen","editIsOpen","setEditIsOpen","eventBus","toggleIsOpen","fn","vars","newImg","img","secure_url","draggableId","provided","snapshot","draggableProps","ref","innerRef","className","isDragging","dragHandleProps","split","onClick","src","alt","width","height","contacts","map","idx","key","defaultChecked","htmlFor","hidden","Columns","column","removeColumn","droppableId","droppableProps","isDraggingOver","randomId","Math","random","toString","substr","AddColumn","addColumn","Specialities","props","setData","setLockTasks","orderIndex","newColumnOrder","splice","newColums","newTasks","forEach","newData","newTaskIds","filter","newTask","findIndex","LocktaskId","newLockTasks","push","tdIdx","onDragEnd","result","document","style","color","backgroundColor","destination","source","start","finish","startTaskIds","Array","from","newStart","finishTaskIds","newFinish","newColumn","onDragStart","onDragUpdate","update","opacity","Object","keys","length","transition","direction","Home","App","component","path","Boolean","location","hostname","match","rootReducer","combineReducers","state","action","_id","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0cb35dd.chunk.js","sourcesContent":["\r\nvar initialData = {\r\n    tasks: {\r\n        t101: { id: 't101', contact: 'buy food', info:{media:'',show:true , tdList:[{title:'chips', isFinish:false},{title:'bamba', isFinish:true},{title:'apropo', isFinish:true}]} },\r\n        t102: { id: 't102', contact: 'buy drink', info:{media:'',show:true,tdList:[{title:'kola', isFinish:false},{title:'spring', isFinish:true},{title:'orange juice', isFinish:true}]} },\r\n        t103: { id: 't103', contact: 'choose song', info:{media:'https://www.youtube.com/watch?v=t4-Z8vVMRBs',show:true}},\r\n        t104: { id: 't104', contact: 'invite friends', info:{media:'',show:true,tdList:[{title:'guy', isFinish:false},{title:'sapir', isFinish:true},{title:'oshri', isFinish:true}]} },\r\n        t105: { id: 't105', contact: 'party', info:{media:'https://amp.thenationalnews.com/image/policy:1.1042483:1593608070/tr30-June-Ibiza.jpg?f=16x9&w=1200&$p$f$w=ae152f2',show:true} },\r\n    },\r\n    colums: {\r\n        c101: {\r\n            id: 'c101',\r\n            title: 'Todo',\r\n            taskIds: [ 't102', 't104']\r\n        },\r\n        c102: {\r\n            id: 'c102',\r\n            title: 'Doing',\r\n            taskIds: ['t105', 't103']\r\n        },\r\n        c103: {\r\n            id: 'c103',\r\n            title: 'Done',\r\n            taskIds: ['t101']\r\n        },\r\n    },\r\n    columnOrder: ['c101', 'c102', 'c103']\r\n}\r\n\r\nvar lockTask = ['t101','t102'];\r\n\r\n\r\nfunction query() {\r\n    return { ...initialData };\r\n}\r\n\r\nfunction updateData(data) {\r\n    initialData = data\r\n}\r\n\r\n\r\nfunction getLocks() {\r\n    return [...lockTask]\r\n}\r\n\r\nfunction updateLocks(locks) {\r\n    lockTask=locks;\r\n}\r\n\r\nvar dataService = {\r\n    query,\r\n    updateData,\r\n    getLocks,\r\n    updateLocks\r\n}\r\n\r\nexport default dataService \r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useForm(initialState, cb = function () { }) {\r\n    const [fields, setFields] = useState(initialState);\r\n\r\n    useEffect(() => { cb(fields) }, [fields])\r\n\r\n    return [\r\n        fields,\r\n        function (event) {\r\n            if (!event) setFields({\r\n                contact: '',\r\n                title:''\r\n            });\r\n            else {\r\n\r\n                const value = event.target.type === 'number' ? +event.target.value : event.target.value\r\n                setFields({\r\n                    ...fields,\r\n                    [event.target.name]: value\r\n                });\r\n            }\r\n        },\r\n\r\n    ];\r\n}","import React from 'react'\r\nimport { useForm } from '../services/customHooks';\r\n\r\nexport function AddTask({addTask,columnId}) {\r\n\r\n    const [task, handleChange] = useForm({ contact: '' });\r\n\r\n    const handleSubmit=(ev)=>{\r\n        ev.preventDefault();\r\n        addTask(task.contact,columnId)\r\n        handleChange()\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={(ev)=>{handleSubmit(ev)}}>\r\n            <input name=\"contact\" autoComplete=\"off\" placeholder='Add task' value={task.contact} onChange={handleChange} type=\"text\" />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../services/customHooks';\r\n\r\nexport function EditData({editData,taskId,toggleDataEdit}) {\r\n\r\n    const [data, handleChange] = useForm({ media: '' });\r\n\r\n    const handleSubmit=(ev)=>{\r\n        editData(taskId,data.media)\r\n        ev.preventDefault();\r\n        toggleDataEdit();\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={(ev)=>{handleSubmit(ev)}}>\r\n            <input name=\"media\" autoComplete=\"off\" placeholder='img or youtube link' value={data.media} onChange={handleChange} type=\"text\" />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../services/customHooks';\r\n\r\nexport function AddTD({addTD,taskId}) {\r\n\r\n    const [td, handleChange] = useForm({ title: '' });\r\n\r\n    const handleSubmit=(ev)=>{\r\n        ev.preventDefault();\r\n        addTD(taskId,td.title)\r\n        handleChange()\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={(ev)=>{handleSubmit(ev)}}>\r\n            <input name=\"title\" autoComplete=\"off\" placeholder='Add To Do' value={td.title} onChange={handleChange} type=\"text\" />\r\n        </form>\r\n    )\r\n}\r\n","function on(eventName, listener) {\r\n    const callListener = ({ detail }) => {\r\n        listener(detail)\r\n    }\r\n    window.addEventListener(eventName, callListener)\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener)\r\n    }\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\n\r\nexport default { on, emit }","export const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(ev) {\r\n    const CLOUD_NAME = \"dif8yy3on\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', ev.target.files[0])\r\n    formData.append('upload_preset', 'misterToy');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n    \r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport LockOpenOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { EditData } from './EditData';\r\nimport { AddTD } from './AddTD';\r\nimport eventBus from '../services/eventBusService'\r\nimport { cloudinaryService } from '../services/cloudinaryService'\r\nimport AttachmentIcon from '@material-ui/icons/Attachment';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function Task({ task, index, removeTask, columnId, lockTasks, createTD, toggleIsLock, toggleIsShown, editData, addTD, toggleIsFinish, removeTD }) {\r\n\r\n    const isDragDisabled = lockTasks.some(taskId => taskId === task.id);\r\n\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\r\n    const [editIsOpen, setEditIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let unsubscribe1 = null;\r\n        let unsubscribe2 = null;\r\n        unsubscribe1 = eventBus.on('toggle-is-open', (taskId) => {\r\n            if (taskId !== task.id) setIsMenuOpen(false)\r\n        })\r\n        unsubscribe2 = eventBus.on('close-menu', (taskId) => {\r\n            if (taskId === task.id) setIsMenuOpen(false)\r\n        })\r\n\r\n        return () => {\r\n            unsubscribe1 = null\r\n            unsubscribe2 = null;\r\n        }\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    const toggleDataEdit = () => {\r\n        setEditIsOpen(!editIsOpen);\r\n    }\r\n\r\n    const toggleIsOpen = (fn = () => { }, vars = []) => {\r\n        eventBus.emit('toggle-is-open', task.id)\r\n        setEditIsOpen(false)\r\n        fn(...vars);\r\n        setIsMenuOpen(!isMenuOpen)\r\n    }\r\n\r\n    const uploadImg=async (ev) => {\r\n        const { name } = ev.target\r\n        try {\r\n            const newImg = await cloudinaryService.uploadImg(ev);\r\n            const img = newImg.secure_url;\r\n            editData(task.id,img)\r\n            setEditIsOpen(false);\r\n        } catch (err) {\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Draggable draggableId={task.id} index={index} isDragDisabled={isDragDisabled}>\r\n            {(provided, snapshot) => (\r\n                <li\r\n                    {...provided.draggableProps}\r\n                    ref={provided.innerRef}\r\n                    className={`${snapshot.isDragging ? 'dragging' : ''} ${isDragDisabled ? 'no-drag' : ''} flex space-between align-center task`}\r\n                // isDragging={snapshot.isDragging}\r\n                >\r\n\r\n                    <div className='flex column'>\r\n                        <div className='flex space-between title'>\r\n\r\n                            <div className='flex align-center '>\r\n                                <div className='handle' {...provided.dragHandleProps}></div>\r\n                                <p>{task.contact}</p>\r\n                            </div>\r\n                            <div className='flex align-center'>\r\n                                {task.info.media && task.info.media.split('.')[1] !== 'youtube' &&\r\n                                    <ImageIcon />\r\n                                }\r\n                                {task.info.media && task.info.media.split('.')[1] === 'youtube' &&\r\n                                    <YouTubeIcon />\r\n                                }\r\n                                {task.info.tdList &&\r\n                                    <ListIcon />\r\n                                }\r\n                                <button className='menu-btn' onClick={() => toggleIsOpen()}><MoreHorizIcon /></button>\r\n                            </div>\r\n                        </div>\r\n                        {(task.info.media && task.info.show && task.info.media.split('.')[1] !== 'youtube') &&\r\n                            <img src={task.info.media} alt=\"\" />}\r\n                        {(task.info.media && task.info.show && task.info.media.split('.')[1] === 'youtube') &&\r\n                            <iframe width=\"180\" height=\"150\" title={task.contacts} src={`https://www.youtube.com/embed/${task.info.media.split('watch?v=')[1]}`}></iframe>}\r\n\r\n                        {(task.info.tdList && task.info.show) &&\r\n                            <div className='list-container'>\r\n                                <ul className='list'>\r\n                                    {task.info.tdList.map((td, idx) => (\r\n                                        <li className='flex space-between' key={idx} >\r\n                                            <div className={`flex align-center ${td.isFinish ? 'done' : ''}`}>\r\n                                                <input onClick={() => toggleIsFinish(task.id, idx)} type=\"checkbox\" defaultChecked={td.isFinish} />\r\n                                                {td.title}\r\n                                            </div>\r\n                                            <button onClick={() => removeTD(task.id, idx)}><CloseIcon /></button>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                                <AddTD addTD={addTD} taskId={task.id} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    {editIsOpen && <div className='edit-container'>\r\n                        <div className='flex flex-end'>\r\n\r\n                            <button onClick={toggleDataEdit}><CloseIcon /></button>\r\n                        </div>\r\n                        <EditData editData={editData} taskId={task.id} toggleDataEdit={toggleDataEdit} />\r\n                        <label className=\"upload-btn flex align-center\" htmlFor=\"upload-file\"><AttachmentIcon/> Upload Img </label>\r\n                        <input hidden type=\"file\" className=\"file-input\" name=\"img\" id=\"upload-file\"\r\n                            onChange={uploadImg} />\r\n                    </div>}\r\n\r\n\r\n\r\n                    {isMenuOpen && <div className='menu'>\r\n                        <button onClick={() => { toggleIsOpen() }}><CloseIcon/> close</button>\r\n                        {!isDragDisabled && <button onClick={() => { toggleIsOpen(removeTask, [task.id, columnId]) }}><DeleteOutlineOutlinedIcon /> Remove</button>}\r\n                        <button onClick={() => { toggleIsOpen(toggleIsLock, [task.id]) }}>{isDragDisabled ? <LockOpenOutlinedIcon /> : <LockOutlinedIcon />} {isDragDisabled ? 'Unlock' : 'Lock'}</button>\r\n                        <button onClick={() => { toggleIsOpen(toggleIsShown, [task.id]) }}><InfoIcon /> {task.info.show ? 'Unshow' : 'Show'}</button>\r\n                        <button onClick={() => { toggleIsOpen(toggleDataEdit) }}><ImageIcon /> Media</button>\r\n                        <button onClick={() => { toggleIsOpen(createTD, [task.id]) }}><ListIcon /> List</button>\r\n                    </div>}\r\n\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    )\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { AddTask } from './AddTask';\r\nimport { Task } from './Task'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\n\r\nexport function Columns({ column, tasks, index,addTask,createTD,removeColumn,removeTask,lockTasks,toggleIsLock,toggleIsShown,editData,addTD,toggleIsFinish,removeTD }) {\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <Draggable\r\n            draggableId={column.id}\r\n            index={index}\r\n        >\r\n            {(provided) => (\r\n                <li\r\n                 className='columns'\r\n                 {...provided.draggableProps}\r\n                 ref={provided.innerRef}\r\n                 >\r\n                     <div className='flex flex-end'>\r\n                     <button onClick={()=>{removeColumn(column.id,index)}}><CloseIcon/></button>\r\n                     </div>\r\n                    <h2 {...provided.dragHandleProps}>{column.title}</h2>\r\n                    <Droppable droppableId={column.id} type=\"task\">\r\n                        {(provided, snapshot) => (\r\n                            <ul\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                className={`flex column ${snapshot.isDraggingOver ? 'dragging' : ''}`}\r\n                            >\r\n                                {tasks.map((task, index) => <Task editData={editData} toggleIsFinish={toggleIsFinish} addTD={addTD} key={task.id}\r\n                                 toggleIsShown={toggleIsShown} task={task} index={index} removeTask={removeTask} columnId={column.id}\r\n                                  lockTasks={lockTasks} toggleIsLock={toggleIsLock} removeTD={removeTD} createTD={createTD} />)}\r\n                               <div className='place-holder'>\r\n\r\n                                {provided.placeholder}\r\n                               </div>\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                   <AddTask addTask={addTask} columnId={column.id}  />\r\n                </li>\r\n            )}\r\n        </Draggable>\r\n    )\r\n\r\n}","\r\nexport function randomId() {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n}","import React from 'react'\r\nimport { useForm } from '../services/customHooks';\r\n\r\nexport function AddColumn({addColumn}) {\r\n\r\n    const [column, handleChange] = useForm({ title: '' });\r\n\r\n    const handleSubmit=(ev)=>{\r\n        ev.preventDefault();\r\n        addColumn(column.title);\r\n        handleChange()\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={(ev)=>{handleSubmit(ev)}}>\r\n            <input name=\"title\" autoComplete=\"off\" placeholder='Add card' value={column.title} onChange={handleChange} type=\"text\" />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport dataService from '../services/initialDataService'\r\nimport { Columns } from './Columns';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { randomId } from '../services/utilService';\r\nimport { AddColumn } from './AddColumn';\r\nimport eventBus from '../services/eventBusService'\r\n\r\n\r\nexport function Specialities(props) {\r\n\r\n\r\n    const [data, setData] = useState(dataService.query());\r\n    const [lockTasks, setLockTasks] = useState(dataService.getLocks());\r\n\r\n\r\n    useEffect(() => {\r\n        dataService.updateData(data);\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        dataService.updateLocks(lockTasks);\r\n    }, [lockTasks])\r\n\r\n    const onDragEnd = result => {\r\n        document.body.style.color = 'inherit'\r\n        document.body.style.backgroundColor = 'inherit'\r\n        const { destination, source, draggableId, type } = result;\r\n        if (!destination) return;\r\n        if (\r\n            destination.droppableId === source.droppableId &&\r\n            destination.index === source.index\r\n        ) return;\r\n\r\n        if (type === 'column') {\r\n            const newColumnOrder = Array.from(data.columnOrder);\r\n            newColumnOrder.splice(source.index, 1);\r\n            newColumnOrder.splice(destination.index, 0, draggableId);\r\n\r\n            const newData = {\r\n                ...data,\r\n                columnOrder: newColumnOrder\r\n            }\r\n\r\n            setData(newData);\r\n            return;\r\n        }\r\n\r\n        const start = data.colums[source.droppableId];\r\n        const finish = data.colums[destination.droppableId];\r\n\r\n        if (start === finish) {\r\n            const newTaskIds = Array.from(start.taskIds);\r\n            newTaskIds.splice(source.index, 1);\r\n            newTaskIds.splice(destination.index, 0, draggableId);\r\n            const newColumn = {\r\n                ...start,\r\n                taskIds: newTaskIds\r\n            }\r\n\r\n            const newData = {\r\n                ...data,\r\n                colums: {\r\n                    ...data.colums,\r\n                    [newColumn.id]: newColumn\r\n                }\r\n            }\r\n\r\n            setData(newData);\r\n            return;\r\n        }\r\n\r\n        const startTaskIds = Array.from(start.taskIds);\r\n        startTaskIds.splice(source.index, 1);\r\n        const newStart = {\r\n            ...start,\r\n            taskIds: startTaskIds\r\n        };\r\n\r\n        const finishTaskIds = Array.from(finish.taskIds);\r\n        finishTaskIds.splice(destination.index, 0, draggableId);\r\n        const newFinish = {\r\n            ...finish,\r\n            taskIds: finishTaskIds\r\n        };\r\n\r\n        const newData = {\r\n            ...data,\r\n            colums: {\r\n                ...data.colums,\r\n                [newStart.id]: newStart,\r\n                [newFinish.id]: newFinish,\r\n            }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const removeColumn = (columnId, orderIndex) => {\r\n        const taskIds = [...data.colums[columnId].taskIds];\r\n\r\n        const newColumnOrder = [...data.columnOrder]\r\n        newColumnOrder.splice(orderIndex, 1);\r\n\r\n        const newColums = { ...data.colums }\r\n        delete newColums[columnId];\r\n\r\n        const newTasks = { ...data.tasks };\r\n        taskIds.forEach(id => delete newTasks[id])\r\n\r\n        const newData = {\r\n            tasks: newTasks,\r\n            colums: newColums,\r\n            columnOrder: newColumnOrder\r\n        }\r\n\r\n        console.log(newData);\r\n\r\n        setData(newData);\r\n    }\r\n\r\n    const removeTask = (taskId, columnId) => {\r\n        const newTaskIds = data.colums[columnId].taskIds.filter(id => id !== taskId);\r\n        const newColums = {\r\n            ...data.colums,\r\n            [columnId]: {\r\n                ...data.colums[columnId],\r\n                taskIds: newTaskIds\r\n            }\r\n        }\r\n        const newTasks = { ...data.tasks }\r\n        delete newTasks[taskId];\r\n        const newData = {\r\n            ...data,\r\n            tasks: newTasks,\r\n            colums: newColums\r\n        }\r\n\r\n        setData(newData);\r\n\r\n    }\r\n\r\n    const addTask = (contact, columnId) => {\r\n        const id = randomId();\r\n        const newTask = { id, contact, info: { media: '', show: true } }\r\n        const newData = {\r\n            tasks: {\r\n                ...data.tasks,\r\n                [id]: newTask\r\n            },\r\n            colums: {\r\n                ...data.colums,\r\n                [columnId]: {\r\n                    ...data.colums[columnId],\r\n                    taskIds: [...data.colums[columnId].taskIds, id]\r\n                }\r\n            },\r\n            columnOrder: [\r\n                ...data.columnOrder\r\n            ]\r\n\r\n        }\r\n\r\n        setData(newData);\r\n    }\r\n\r\n    const addColumn = (title) => {\r\n        const id = randomId();\r\n        const newColumn = { id, title, taskIds: [] }\r\n        const newData = {\r\n            tasks: { ...data.tasks },\r\n            colums: { ...data.colums, [id]: newColumn },\r\n            columnOrder: [...data.columnOrder, id]\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const onDragStart = (ev) => {\r\n        console.log(ev);\r\n        eventBus.emit('close-menu', ev.draggableId)\r\n        document.body.style.color = 'grey'\r\n    }\r\n\r\n    const onDragUpdate = update => {\r\n        const { destination } = update;\r\n        const opacity = destination ? destination.index / Object.keys(data.tasks).length : 0;\r\n        document.body.style.backgroundColor = `rgba(180, 214, 211,${opacity})`\r\n        document.body.style.transition = 'background-color .3s ease'\r\n    }\r\n\r\n    const toggleIsLock = (taskId) => {\r\n        const idx = lockTasks.findIndex(LocktaskId => LocktaskId === taskId);\r\n        if (idx === -1) setLockTasks([...lockTasks, taskId])\r\n        else {\r\n            const newLockTasks = [...lockTasks];\r\n            newLockTasks.splice(idx, 1);\r\n            setLockTasks(newLockTasks);\r\n        }\r\n    }\r\n\r\n    const toggleIsShown = (taskId) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        newTask.info.show = !newTask.info.show;\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const editData = (taskId, media) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        newTask.info.media = media;\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const addTD = (taskId, title) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        newTask.info.tdList.push({ isFinish: false, title })\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const toggleIsFinish = (taskId, idx) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        newTask.info.tdList[idx].isFinish = !newTask.info.tdList[idx].isFinish\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const removeTD = (taskId, tdIdx) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        newTask.info.tdList.splice(tdIdx, 1);\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n    const createTD = (taskId) => {\r\n        const newTask = { ...data.tasks[taskId] }\r\n        if (newTask.info.tdList) return;\r\n        newTask.info.tdList = [];\r\n        const newData = {\r\n            ...data,\r\n            tasks: { ...data.tasks, [taskId]: newTask }\r\n        }\r\n        setData(newData);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='main-div'>\r\n\r\n            <DragDropContext\r\n                onDragEnd={onDragEnd}\r\n                onDragStart={onDragStart}\r\n                onDragUpdate={onDragUpdate}\r\n            >\r\n                <section className='flex align-start specialities'>\r\n                    <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\r\n                        {provided => (\r\n\r\n                            <ul\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                                className='flex align-start'\r\n                            >\r\n                                {\r\n                                    data.columnOrder.map((columnId, index) => {\r\n                                        const column = data.colums[columnId];\r\n                                        const tasks = column.taskIds.map(taskId => data.tasks[taskId]);\r\n                                        return <Columns key={column.id} addTD={addTD} editData={editData} column={column}\r\n                                            tasks={tasks} index={index} toggleIsShown={toggleIsShown} toggleIsFinish={toggleIsFinish}\r\n                                            addTask={addTask} removeColumn={removeColumn} removeTask={removeTask} lockTasks={lockTasks}\r\n                                            toggleIsLock={toggleIsLock} removeTD={removeTD} createTD={createTD} />\r\n                                    })\r\n                                }\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n                    </Droppable>\r\n                    <div className='add-column-container'>\r\n                        <AddColumn addColumn={addColumn} />\r\n                    </div>\r\n                </section>\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport { Specialities } from '../cmps/Specialities';\r\n\r\n\r\n\r\nexport function Home(props) {\r\n    return (\r\n        <section>\r\n            <Specialities />\r\n        </section>\r\n    )\r\n\r\n}","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Home } from './pages/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route component={Home} path='/' />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  tasks: [],\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_TASKS':\r\n      return { ...state, tasks: action.tasks };\r\n    case 'TASK_ADD':\r\n      return { ...state, tasks: [...state.tasks, action.task] };\r\n    case 'TASK_UPDATE':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(task =>\r\n          task._id === action.task._id ? action.task : task\r\n        )\r\n      };\r\n    case 'TASK_REMOVE':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task => task._id !== action.taskId)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport taskReducer from './taskReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  task: taskReducer,\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index.js';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/styles/global.scss'\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}